/*
    Project Euler problem #2

    Even Fibonacci numbers
    -----------------------------

    Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    By starting with 1 and 2, the first 10 terms will be:
                1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    find the sum of the even-valued terms.

*/


 let limit: number = 4000000

 
 function findEvenTermSum (prevNumber1: number, prevNumber2: number, sum: number) : number { 

    let nextNumber: number = prevNumber1 + prevNumber2 
    if (nextNumber >= limit) {
        return sum
    }
    else if (nextNumber % 2 == 0) {
        sum += nextNumber
    }
    return findEvenTermSum (prevNumber2, nextNumber, sum)
 }

 console.time()
 let evenTermSum: number = findEvenTermSum (1, 2, 2) // answer is 4613732
 console.timeEnd()

 console.log ( evenTermSum )